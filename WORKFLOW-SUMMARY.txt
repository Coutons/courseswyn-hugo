============================================================
ðŸš€ COMPLETE ARTICLE CREATION & PUBLISHING WORKFLOW
ðŸ“… Last Updated: October 25, 2025
ðŸ“§ CoursesWyn Content Creator SOP
============================================================

================================================================
PHASE 1: ARTICLE CREATION
================================================================

STEP 1: CREATE NEW ARTICLE
===========================
Command: hugo new posts "Your Article Title Here"

Example:
hugo new posts "Best React Courses on Udemy 2025"

What happens:
âœ… Creates content/posts/your-article-title/index.md
âœ… Pre-filled with complete frontmatter
âœ… Includes SEO fields, categories, tags
âœ… Has template content structure

----------------------------------------------------------------

STEP 2: EDIT ARTICLE CONTENT
============================
Edit file: content/posts/your-article-title/index.md

REQUIRED FRONTMATTER FIELDS:
============================
---
title: "Your Article Title"
slug: "your-article-slug"  # URL-friendly
date: 2025-10-25T14:00:00+07:00  # CURRENT DATE only!
lastmod: 2025-10-25T14:00:00+07:00
draft: false  # Must be false for publishing
layout: "post"
showReadingTime: true

description: "SEO description for article"
categories: ["programming", "education", "tech-courses"]
tags: ["relevant", "tags", "for", "article"]
author: "CoursesWyn Team"
keywords: ["keyword1", "keyword2", "keyword3"]
seo_title: "SEO Title | CoursesWyn"
seo_description: "SEO description"
---

----------------------------------------------------------------

STEP 3: ADD FEATURED IMAGE
==========================
1. Copy image to: static/images/article-slug.jpg
2. Add to markdown:
   ![Alt Text](/images/article-slug.jpg "Caption")
   *Caption text*

3. Image specs:
   - Size: < 500KB recommended
   - Resolution: 1200x630px ideal
   - Format: JPG or WebP

================================================================
PHASE 2: CONTENT ENHANCEMENT
================================================================

STEP 4: ADD SCHEMA MARKUP (Optional but recommended)
====================================================
schema:
  "@context": "https://schema.org"
  "@type": "Article"
  "headline": "Your Article Title"
  "description": "Article description"
  "author": {
    "@type": "Organization",
    "name": "CoursesWyn Team"
  }
  "publisher": {
    "@type": "Organization",
    "name": "CoursesWyn"
  }
  "datePublished": "2025-10-25T14:00:00+07:00"
  "dateModified": "2025-10-25T14:00:00+07:00"
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": "https://courseswyn.com/your-article-slug/"
  }
  "articleSection": "Programming Courses"
  "keywords": "keyword1, keyword2, keyword3"

----------------------------------------------------------------

STEP 5: UPDATE COURSE LINKS
===========================
Replace all course URLs with affiliate links:
https://trk.udemy.com/c/6564357/3193860/39854?u=https://www.udemy.com/course/...

Test all external links work properly.

================================================================
PHASE 3: LOCAL TESTING
================================================================

STEP 6: START DEVELOPMENT SERVER
=================================
Command: hugo server -D

Server available at: http://localhost:1313/

Alternative ports:
- hugo server -D --port 1314
- hugo server -D --port 8080

----------------------------------------------------------------

STEP 7: TEST ARTICLE LOCALLY
============================
Test URLs:
http://localhost:1313/posts/your-article-slug/
http://localhost:1313/posts/

Verify:
âœ… Article displays correctly
âœ… Featured image loads with styling
âœ… Responsive design works (mobile, tablet, desktop)
âœ… All internal/external links work
âœ… SEO meta tags present in page source
âœ… Schema markup validates

----------------------------------------------------------------

STEP 8: TEST PRODUCTION BUILD
=============================
Command: hugo --minify

Should show:
- Pages: XX (count should increase)
- No errors or warnings
- Build completes successfully

================================================================
PHASE 4: DEPLOYMENT
================================================================

STEP 9: COMMIT CHANGES
======================
Commands:
git add .
git commit -m "feat: add new article - Your Article Title

- Add comprehensive article about topic
- Include featured image and course reviews
- Update SEO meta tags and schema markup
- Ensure responsive design and accessibility"

git push origin main

----------------------------------------------------------------

STEP 10: MONITOR DEPLOYMENT
===========================
1. Check GitHub Actions:
   https://github.com/Coutons/courseswyn-hugo/actions

2. Look for workflow: "Deploy to GitHub Pages"
   - Status: âœ… Success (green checkmark)
   - Check build logs for errors
   - Verify commit hash matches your push

3. Wait 2-5 minutes for GitHub Actions completion

----------------------------------------------------------------

STEP 11: VERIFY PRODUCTION
==========================
Test production URLs:
https://courseswyn.com/posts/your-article-slug/
https://courseswyn.com/posts/

Verify:
âœ… Article loads correctly (no 404 errors)
âœ… Featured image displays with styling
âœ… All links work (affiliate links, internal links)
âœ… SEO validation passes
âœ… Mobile responsive design
âœ… Fast loading speed

================================================================
PHASE 5: QUALITY ASSURANCE
================================================================

STEP 12: SEO VALIDATION TOOLS
=============================
âœ… Google Rich Results Test: https://search.google.com/test/rich-results
âœ… Schema Markup Validator: https://validator.schema.org/
âœ… PageSpeed Insights: https://pagespeed.web.dev/
âœ… Mobile-Friendly Test: https://search.google.com/test/mobile-friendly

Target Scores:
- Performance: 90+
- Accessibility: 95+
- Best Practices: 90+
- SEO: 95+

----------------------------------------------------------------

STEP 13: PERFORMANCE OPTIMIZATION
=================================
âœ… Image optimization (<500KB, proper format)
âœ… Minified build (hugo --minify)
âœ… Proper heading hierarchy (H1, H2, H3)
âœ… Internal linking structure
âœ… Schema markup implementation

================================================================
EMERGENCY COMMANDS
================================================================

BUILD ERRORS:
=============
hugo --cleanDestinationDir --minify
# Force clean rebuild

DATE ISSUES:
============
# Check all article dates
grep "date:" content/posts/*/index.md

# Fix future dates (use current date)
date: 2025-10-25T14:00:00+07:00  # Not future date!

YAML ERRORS:
============
# Check for duplicate fields
grep -n "keywords:" content/posts/*/index.md

# Validate YAML syntax
# Remove duplicate or invalid fields

DEPLOYMENT ISSUES:
==================
# Check GitHub Actions logs
https://github.com/Coutons/courseswyn-hugo/actions

# Manual workflow trigger
# Go to Actions tab â†’ Deploy to GitHub Pages â†’ Run workflow

================================================================
IMPORTANT URLs
================================================================

GITHUB ACTIONS MONITORING:
https://github.com/Coutons/courseswyn-hugo/actions

LIVE WEBSITE:
https://courseswyn.com/

REPOSITORY:
https://github.com/Coutons/courseswyn-hugo

SITEMAP:
https://courseswyn.com/sitemap.xml

POSTS LIST:
https://courseswyn.com/posts/

================================================================
DAILY WORKFLOW CHECKLIST
================================================================

ARTICLE CREATION:
- [ ] Create with: hugo new posts "Title"
- [ ] Fill all frontmatter fields
- [ ] Add featured image to static/images/
- [ ] Write comprehensive content
- [ ] Test all links work

LOCAL TESTING:
- [ ] Start: hugo server -D
- [ ] Test responsive design
- [ ] Verify SEO meta tags
- [ ] Check image loading
- [ ] Test production build

DEPLOYMENT:
- [ ] Commit with descriptive message
- [ ] Push to main branch
- [ ] Monitor GitHub Actions
- [ ] Verify production deployment

QUALITY ASSURANCE:
- [ ] SEO validation (Google tools)
- [ ] Performance testing
- [ ] Mobile responsiveness
- [ ] Schema markup validation

================================================================
QUICK REFERENCE COMMANDS
================================================================

CREATE ARTICLE:
hugo new posts "Article Title"

LOCAL TESTING:
hugo server -D
http://localhost:1313/posts/article-slug/

BUILD TESTING:
hugo --minify

DEPLOYMENT:
git add . && git commit -m "feat: add article" && git push origin main

MONITORING:
https://github.com/Coutons/courseswyn-hugo/actions

PRODUCTION TEST:
https://courseswyn.com/posts/article-slug/

================================================================
TROUBLESHOOTING QUICK FIXES
================================================================

1. ARTICLE NOT SHOWING:
   - Check date (not future date)
   - Verify draft: false
   - Run: hugo list published

2. BUILD ERRORS:
   - Run: hugo --minify locally first
   - Check for duplicate YAML fields
   - Validate schema markup syntax

3. IMAGE NOT LOADING:
   - Check file path in static/images/
   - Verify image format (JPG/WebP)
   - Check file size (<500KB)

4. SEO ISSUES:
   - Validate schema markup
   - Check meta tags in page source
   - Test rich snippets

5. DEPLOYMENT FAILED:
   - Check GitHub Actions logs
   - Verify commit message format
   - Check for YAML syntax errors

================================================================
SUCCESS METRICS
================================================================

TARGET SCORES:
- Google PageSpeed: 90+ Performance
- GTmetrix: Grade A
- Schema.org: Valid markup
- Mobile-Friendly: Pass
- Core Web Vitals: All green

CONTENT QUALITY:
- Article length: 1500+ words
- Featured image: Present and optimized
- Internal links: 3-5 per article
- Course links: Working affiliate links
- SEO keywords: Naturally integrated

================================================================
SUPPORT & DOCUMENTATION
================================================================

DETAILED GUIDE:
ðŸ“„ ARTICLE-CREATION-WORKFLOW.md (full documentation)

QUICK REFERENCE:
ðŸ“„ QUICK-REF-COMMANDS.md (daily commands)

HUGO DOCS:
https://gohugo.io/documentation/

THEME DOCS:
https://themes.gohugo.io/themes/terminal/

SEO TOOLS:
https://search.google.com/test/rich-results
https://validator.schema.org/
https://pagespeed.web.dev/

================================================================
ðŸŽ‰ WORKFLOW COMPLETE!
Article successfully created and deployed following this SOP!

Next article: Use same process for consistent quality and SEO optimization.
================================================================
